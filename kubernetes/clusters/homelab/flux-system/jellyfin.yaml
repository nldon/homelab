---
apiVersion: v1
kind: Namespace
metadata:
  name: jellyfin

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-pv-nfs-config
  namespace: jellyfin
spec:
  storageClassName: ""
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/nfs_share/jellyfin/config
    server: 10.3.2.104
    readOnly: false

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-pv-nfs-data
  namespace: jellyfin
spec:
  storageClassName: ""
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/nfs_share/jellyfin/data
    server: 10.3.2.104
    readOnly: false

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-pvc-config
  namespace: jellyfin
spec:
  storageClassName: ""
  volumeName: jellyfin-pv-nfs-config
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-pvc-data
  namespace: jellyfin
spec:
  storageClassName: ""
  volumeName: jellyfin-pv-nfs-data
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 50Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      runtimeClassName: nvidia
      volumes:
      - name: nfs-jellyfin-config
        persistentVolumeClaim:
          claimName: jellyfin-pvc-config
      - name: nfs-jellyfin-data
        persistentVolumeClaim:
          claimName: jellyfin-pvc-data
      initContainers:
      - name: gpu-check
        image: nvidia/cuda:12.3.2-base-ubuntu22.04
        command: ["nvidia-smi"]
        resources:
          limits:
            nvidia.com/gpu: 1
      containers:
      - name: jellyfin
        image: lscr.io/linuxserver/jellyfin:latest
        imagePullPolicy: Always
        volumeMounts:
        - name: nfs-jellyfin-config
          mountPath: /config
        - name: nfs-jellyfin-data
          mountPath: /data
        ports:
        - containerPort: 8096
          name: http-tcp
          protocol: TCP
        - containerPort: 8920
          name: https-tcp
          protocol: TCP
        - containerPort: 1900
          name: dlna-udp
          protocol: UDP
        - containerPort: 7359
          name: discovery-udp
          protocol: UDP
        env:
        - name: JELLYFIN_PublishedServerUrl
          value: 10.3.2.201
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: Europe/London
        - name: NVIDIA_VISIBLE_DEVICES
          value: all
        securityContext:
          privileged: true
        resources:
          limits:
            nvidia.com/gpu: 1

---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-udp
  namespace: jellyfin
spec:
  type: LoadBalancer
  selector:
    app: jellyfin
  ports:
    - name: dlna-udp
      protocol: UDP
      port: 1900
      targetPort: 1900
    - name: discovery-udp
      protocol: UDP
      port: 7359
      targetPort: 7359

---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-tcp
  namespace: jellyfin
spec:
  type: LoadBalancer
  selector:
    app: jellyfin
  ports:
    - name: http-tcp
      protocol: TCP
      port: 8096
      targetPort: 8096
    - name: https-tcp
      protocol: TCP
      port: 8920
      targetPort: 8920

---
# TODO: Add Ingress for jellyfin